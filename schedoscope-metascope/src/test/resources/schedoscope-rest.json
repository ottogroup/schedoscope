{
  "overview": {
    "materialized": 35
  },
  "views": [{
    "viewTableName": "demo_schedoscope_example_osm_stage.nodes",
    "transformation": {
      "name": "filesystem -> CopyFromTransformation",
      "properties": {
        "from": "classpath://osm-data/nodes.txt",
        "destinationView": "schedoscope.example.osm.stage/Nodes/",
        "recursive": "true"
      }
    },
    "external": false,
    "status": "materialized",
    "fields": [{
      "name": "id",
      "fieldtype": "BIGINT",
      "comment": "The ID of the node"
    }, {
      "name": "version",
      "fieldtype": "INT",
      "comment": "OSM version - ignored"
    }, {
      "name": "user_id",
      "fieldtype": "INT",
      "comment": "OSM version - ignored"
    }, {
      "name": "tstamp",
      "fieldtype": "STRING",
      "comment": "Timestamp of node creation"
    }, {
      "name": "longitude",
      "fieldtype": "DOUBLE",
      "comment": "Longitude of the node"
    }, {
      "name": "latitude",
      "fieldtype": "DOUBLE",
      "comment": "Latitude of the node"
    }],
    "comment": "Stage View for data from file nodes.txt",
    "isTable": true,
    "storageFormat": "TextFile",
    "viewPath": "schedoscope.example.osm.stage/Nodes",
    "materializeOnce": false
  }, {
    "viewTableName": "demo_schedoscope_example_osm_processed.nodes_with_geohash",
    "transformation": {
      "name": "mapreduce",
      "properties": {
        "input": "hdfs://quickstart.cloudera:8020/hdp/demo/schedoscope/example/osm/stage/nodes",
        "output": "hdfs://quickstart.cloudera:8020/hdp/demo/schedoscope/example/osm/processed/nodes_with_geohash"
      }
    },
    "external": false,
    "status": "materialized",
    "fields": [{
      "name": "id",
      "fieldtype": "BIGINT",
      "comment": "The node ID"
    }, {
      "name": "version",
      "fieldtype": "INT",
      "comment": "OSM version - ignored"
    }, {
      "name": "user_id",
      "fieldtype": "INT",
      "comment": "OSM user ID - ignored"
    }, {
      "name": "tstamp",
      "fieldtype": "STRING",
      "comment": "Timestamp of node creation"
    }, {
      "name": "longitude",
      "fieldtype": "DOUBLE",
      "comment": "Longitude of the node"
    }, {
      "name": "latitude",
      "fieldtype": "DOUBLE",
      "comment": "Latitude of the node"
    }, {
      "name": "geohash",
      "fieldtype": "STRING",
      "comment": "A geoencoded area string"
    }],
    "comment": "nodes, extended with geohash",
    "isTable": true,
    "storageFormat": "TextFile",
    "viewPath": "schedoscope.example.osm.processed/NodesWithGeohash",
    "materializeOnce": false
  }, {
    "viewTableName": "demo_schedoscope_example_osm_datahub.trainstations",
    "transformation": {
      "name": "pig",
      "properties": {
        "latin": "in = LOAD '${input_table}' USING org.apache.hive.hcatalog.pig.HCatLoader() AS (id:chararray, occurred_at:chararray, version:int, user_id:int, longitude:double, latitude:double, geohash:chararray, tags:map[], created_at:chararray, created_by:chararray, year:chararray, month:chararray, month_id:chararray);\nfilter_stations = FILTER in BY (tags#'railway' == 'station') OR (tags#'railway' == 'halt');\nselect = FOREACH filter_stations GENERATE id, tags#'name' AS station_name:chararray, SUBSTRING(geohash,0,7) AS area, '${workflow_time}' AS created_at, '${workflow_name}' AS created_by;\nout = STORE select INTO '${output_folders}' USING ${storage_format};\n"
      }
    },
    "external": false,
    "status": "materialized",
    "fields": [{
      "name": "id",
      "fieldtype": "STRING",
      "comment": "The ID of the entity represented by the view"
    }, {
      "name": "station_name",
      "fieldtype": "STRING",
      "comment": "The name of the trainstation"
    }, {
      "name": "area",
      "fieldtype": "STRING",
      "comment": "A geoencoded area string"
    }, {
      "name": "created_at",
      "fieldtype": "STRING",
      "comment": "Timestamp of the job run that created the record"
    }, {
      "name": "created_by",
      "fieldtype": "STRING",
      "comment": "Identifier of the job run creating the record"
    }],
    "comment": "View of trainstations generated by Pig transformation",
    "isTable": true,
    "storageFormat": "Parquet",
    "viewPath": "schedoscope.example.osm.datahub/Trainstations",
    "materializeOnce": false
  }, {
    "viewTableName": "demo_schedoscope_example_osm_datahub.restaurants",
    "transformation": {
      "name": "hive",
      "properties": {
        "sql": "SET parquet.compression=GZIP;\nINSERT OVERWRITE TABLE demo_schedoscope_example_osm_datahub.restaurants\nSELECT \nid,\ntags['name'] AS restaurant_name,\ntags['cuisine'] AS restaurant_type,\nsubstr(geohash,1,7) AS area,\n'${workflow_time}' AS created_at,\n'${workflow_name}' AS created_by\n\nFROM ${env}_schedoscope_example_osm_processed.nodes\nWHERE tags['amenity'] =\t'restaurant'\n\n"
      }
    },
    "external": false,
    "status": "materialized",
    "fields": [{
      "name": "id",
      "fieldtype": "STRING",
      "comment": "The ID of the entity represented by the view"
    }, {
      "name": "restaurant_name",
      "fieldtype": "STRING",
      "comment": "The name of a restaurant"
    }, {
      "name": "restaurant_type",
      "fieldtype": "STRING",
      "comment": "The cuisine of a restaurant, as given by OSM."
    }, {
      "name": "area",
      "fieldtype": "STRING",
      "comment": "A geoencoded area string"
    }, {
      "name": "created_at",
      "fieldtype": "STRING",
      "comment": "Timestamp of the job run that created the record"
    }, {
      "name": "created_by",
      "fieldtype": "STRING",
      "comment": "Identifier of the job run creating the record"
    }],
    "comment": "View of restaurants",
    "isTable": true,
    "storageFormat": "Parquet",
    "viewPath": "schedoscope.example.osm.datahub/Restaurants",
    "materializeOnce": false
  }, {
    "viewTableName": "demo_schedoscope_example_osm_datahub.shops",
    "transformation": {
      "name": "hive",
      "properties": {
        "sql": "SET parquet.compression=GZIP;\nINSERT OVERWRITE TABLE demo_schedoscope_example_osm_datahub.shops\nSELECT \nid,\ntags['name'] AS shop_name,\ntags['shop'] AS shop_type,\nsubstr(geohash,1,7) AS area,\n'${workflow_time}' AS created_at,\n'${workflow_name}' AS created_by\n\nFROM ${env}_schedoscope_example_osm_processed.nodes\nWHERE tags['shop'] LIKE '%'\n\n"
      }
    },
    "external": false,
    "status": "materialized",
    "fields": [{
      "name": "id",
      "fieldtype": "STRING",
      "comment": "The ID of the entity represented by the view"
    }, {
      "name": "shop_name",
      "fieldtype": "STRING",
      "comment": "The name of the shop"
    }, {
      "name": "shop_type",
      "fieldtype": "STRING",
      "comment": "The type of shop as given by OSM"
    }, {
      "name": "area",
      "fieldtype": "STRING",
      "comment": "A geoencoded area string"
    }, {
      "name": "created_at",
      "fieldtype": "STRING",
      "comment": "Timestamp of the job run that created the record"
    }, {
      "name": "created_by",
      "fieldtype": "STRING",
      "comment": "Identifier of the job run creating the record"
    }],
    "comment": "View of shops",
    "isTable": true,
    "storageFormat": "Parquet",
    "viewPath": "schedoscope.example.osm.datahub/Shops",
    "materializeOnce": false
  }, {
    "viewTableName": "demo_schedoscope_example_osm_stage.node_tags",
    "transformation": {
      "name": "filesystem -> CopyFromTransformation",
      "properties": {
        "from": "classpath://osm-data/node_tags.txt",
        "destinationView": "schedoscope.example.osm.stage/NodeTags/",
        "recursive": "true"
      }
    },
    "external": false,
    "status": "materialized",
    "fields": [{
      "name": "node_id",
      "fieldtype": "BIGINT",
      "comment": "The ID of the node the tag refers to"
    }, {
      "name": "key",
      "fieldtype": "STRING",
      "comment": "The key of the tag"
    }, {
      "name": "value",
      "fieldtype": "STRING",
      "comment": "The value of the tag"
    }],
    "comment": "Stage View for data from file node_tags.txt",
    "isTable": true,
    "storageFormat": "TextFile",
    "viewPath": "schedoscope.example.osm.stage/NodeTags",
    "materializeOnce": false
  }, {
    "viewTableName": "demo_schedoscope_example_osm_datamart.shop_profiles",
    "transformation": {
      "name": "hive",
      "properties": {
        "sql": "SET parquet.compression=GZIP;\nINSERT OVERWRITE TABLE demo_schedoscope_example_osm_datamart.shop_profiles\nSELECT \n  s.id,\n  s.shop_name,\n  s.shop_type,\n  s.area,\n  COALESCE(nearby_competitors,0) AS nearby_competitors,\n  COALESCE(nearby_restaurants,0) AS nearby_restaurants,\n  COALESCE(nearby_trainstations,0) AS nearby_trainstations,\n  '${workflow_time}' AS created_at,\n  '${workflow_name}' AS created_by\nFROM ${env}_schedoscope_example_osm_datahub.shops s\nLEFT OUTER JOIN (\n  SELECT \n  COUNT(id)-1 AS nearby_competitors, -- don't count the shop itself\n  area\n  FROM ${env}_schedoscope_example_osm_datahub.shops\n  GROUP BY area\n) shops \nON s.area = shops.area\nLEFT OUTER JOIN (\n  SELECT \n  COUNT(id) AS nearby_restaurants,\n  area\n  FROM ${env}_schedoscope_example_osm_datahub.restaurants\n  GROUP BY area\n) restaurants\nON s.area = restaurants.area\nLEFT OUTER JOIN (\n  SELECT \n  COUNT(id) AS nearby_trainstations,\n  area\n  FROM ${env}_schedoscope_example_osm_datahub.trainstations\n  GROUP BY area\n) trainstations\nON s.area = trainstations.area\n"
      }
    },
    "export": [{
      "name": "JDBC",
      "properties": {
        "Reducers": "2",
        "JDBC Url": "jdbc:mysql://localhost:3306/schedoscope_tutorial?createDatabaseIfNotExist=true",
        "Storage Engine": "InnoDB",
        "User": "root",
        "Batch Size": "1000"
      }
    }],
    "external": false,
    "status": "materialized",
    "fields": [{
      "name": "id",
      "fieldtype": "STRING",
      "comment": "The ID of the entity represented by the view"
    }, {
      "name": "shop_name",
      "fieldtype": "STRING",
      "comment": "The name of the profiled shop"
    }, {
      "name": "shop_type",
      "fieldtype": "STRING",
      "comment": "The type of shop, as given by OSM"
    }, {
      "name": "area",
      "fieldtype": "STRING",
      "comment": "A geoencoded area string"
    }, {
      "name": "cnt_competitors",
      "fieldtype": "INT",
      "comment": "The number of competitors in the area (shops of the same type)"
    }, {
      "name": "cnt_restaurants",
      "fieldtype": "INT",
      "comment": "The number of restaurants in the area"
    }, {
      "name": "cnt_trainstations",
      "fieldtype": "INT",
      "comment": "The number of trainstations in the area"
    }, {
      "name": "created_at",
      "fieldtype": "STRING",
      "comment": "Timestamp of the job run that created the record"
    }, {
      "name": "created_by",
      "fieldtype": "STRING",
      "comment": "Identifier of the job run creating the record"
    }],
    "comment": "Shop profiles showing number of nearby competitors, restaurants and trainstations for each shop",
    "isTable": true,
    "storageFormat": "Parquet",
    "viewPath": "schedoscope.example.osm.datamart/ShopProfiles",
    "materializeOnce": false
  }, {
    "viewTableName": "demo_schedoscope_example_osm_processed.nodes",
    "transformation": {
      "name": "hive",
      "properties": {
        "sql": "SET parquet.compression=GZIP;\nINSERT OVERWRITE TABLE demo_schedoscope_example_osm_processed.nodes\nPARTITION (year = '2015', month = '06', month_id = '201506')\nSELECT\n  n.id,\n  n.tstamp AS occurred_at,\n  n.version,\n  n.user_id,\n  n.longitude,\n  n.latitude,\n  n.geohash,\n  ${env}_schedoscope_example_osm_processed.collect(nt.key, nt.value) AS tags,\n  '${workflow_time}' AS created_at,\n  '${workflow_name}' AS created_by\nFROM ${env}_schedoscope_example_osm_processed.nodes_with_geohash n\nJOIN ${env}_schedoscope_example_osm_stage.node_tags nt\n    ON n.id = nt.node_id\n\nWHERE year(n.tstamp) = '${year}'\n  AND month(n.tstamp) = '${month}'\n    \nGROUP BY\n  n.id,\n  n.tstamp,\n  n.version,\n  n.user_id,  \n  n.longitude,\n  n.latitude,\n  n.geohash,\n  '${workflow_time}',\n  '${workflow_name}'\n"
      }
    },
    "external": false,
    "status": "materialized",
    "fields": [{
      "name": "id",
      "fieldtype": "STRING",
      "comment": "The ID of the entity represented by the view"
    }, {
      "name": "occurred_at",
      "fieldtype": "STRING",
      "comment": "Timestamp of the occurrence in question."
    }, {
      "name": "version",
      "fieldtype": "INT",
      "comment": "OSM version - ignored"
    }, {
      "name": "user_id",
      "fieldtype": "INT",
      "comment": "OSM user ID - ignored"
    }, {
      "name": "longitude",
      "fieldtype": "DOUBLE",
      "comment": "Longitude of the node"
    }, {
      "name": "latitude",
      "fieldtype": "DOUBLE",
      "comment": "Latitude of the node"
    }, {
      "name": "geohash",
      "fieldtype": "STRING",
      "comment": "A geoencoded area string"
    }, {
      "name": "tags",
      "fieldtype": "MAP<STRING,STRING>",
      "comment": "A map of tags"
    }, {
      "name": "created_at",
      "fieldtype": "STRING",
      "comment": "Timestamp of the job run that created the record"
    }, {
      "name": "created_by",
      "fieldtype": "STRING",
      "comment": "Identifier of the job run creating the record"
    }],
    "comment": "View of nodes with tags and geohash",
    "isTable": true,
    "storageFormat": "Parquet",
    "viewPath": "schedoscope.example.osm.processed/Nodes",
    "parameters": [{
      "name": "year",
      "fieldtype": "String"
    }, {
      "name": "month",
      "fieldtype": "String"
    }, {
      "name": "month_id",
      "fieldtype": "String"
    }],
    "materializeOnce": true
  }, {
    "viewTableName": "demo_schedoscope_example_osm_processed.nodes",
    "status": "materialized",
    "isTable": false,
    "viewPath": "schedoscope.example.osm.processed/Nodes/2015/06/201506",
    "dependencies": {
      "demo_schedoscope_example_osm_stage.node_tags": ["schedoscope.example.osm.stage/NodeTags/"],
      "demo_schedoscope_example_osm_processed.nodes_with_geohash": ["schedoscope.example.osm.processed/NodesWithGeohash/"]
    }
  }, {
    "viewTableName": "demo_schedoscope_example_osm_processed.nodes",
    "status": "materialized",
    "isTable": false,
    "viewPath": "schedoscope.example.osm.processed/Nodes/2014/10/201410",
    "dependencies": {
      "demo_schedoscope_example_osm_stage.node_tags": ["schedoscope.example.osm.stage/NodeTags/"],
      "demo_schedoscope_example_osm_processed.nodes_with_geohash": ["schedoscope.example.osm.processed/NodesWithGeohash/"]
    }
  }, {
    "viewTableName": "demo_schedoscope_example_osm_processed.nodes",
    "status": "materialized",
    "isTable": false,
    "viewPath": "schedoscope.example.osm.processed/Nodes/2015/01/201501",
    "dependencies": {
      "demo_schedoscope_example_osm_stage.node_tags": ["schedoscope.example.osm.stage/NodeTags/"],
      "demo_schedoscope_example_osm_processed.nodes_with_geohash": ["schedoscope.example.osm.processed/NodesWithGeohash/"]
    }
  }, {
    "viewTableName": "demo_schedoscope_example_osm_processed.nodes",
    "status": "materialized",
    "isTable": false,
    "viewPath": "schedoscope.example.osm.processed/Nodes/2014/01/201401",
    "dependencies": {
      "demo_schedoscope_example_osm_stage.node_tags": ["schedoscope.example.osm.stage/NodeTags/"],
      "demo_schedoscope_example_osm_processed.nodes_with_geohash": ["schedoscope.example.osm.processed/NodesWithGeohash/"]
    }
  }, {
    "viewTableName": "demo_schedoscope_example_osm_processed.nodes",
    "status": "materialized",
    "isTable": false,
    "viewPath": "schedoscope.example.osm.processed/Nodes/2014/08/201408",
    "dependencies": {
      "demo_schedoscope_example_osm_stage.node_tags": ["schedoscope.example.osm.stage/NodeTags/"],
      "demo_schedoscope_example_osm_processed.nodes_with_geohash": ["schedoscope.example.osm.processed/NodesWithGeohash/"]
    }
  }, {
    "viewTableName": "demo_schedoscope_example_osm_processed.nodes",
    "status": "materialized",
    "isTable": false,
    "viewPath": "schedoscope.example.osm.processed/Nodes/2015/11/201511",
    "dependencies": {
      "demo_schedoscope_example_osm_stage.node_tags": ["schedoscope.example.osm.stage/NodeTags/"],
      "demo_schedoscope_example_osm_processed.nodes_with_geohash": ["schedoscope.example.osm.processed/NodesWithGeohash/"]
    }
  }, {
    "viewTableName": "demo_schedoscope_example_osm_processed.nodes",
    "status": "materialized",
    "isTable": false,
    "viewPath": "schedoscope.example.osm.processed/Nodes/2016/02/201602",
    "dependencies": {
      "demo_schedoscope_example_osm_stage.node_tags": ["schedoscope.example.osm.stage/NodeTags/"],
      "demo_schedoscope_example_osm_processed.nodes_with_geohash": ["schedoscope.example.osm.processed/NodesWithGeohash/"]
    }
  }, {
    "viewTableName": "demo_schedoscope_example_osm_processed.nodes",
    "status": "materialized",
    "isTable": false,
    "viewPath": "schedoscope.example.osm.processed/Nodes/2014/06/201406",
    "dependencies": {
      "demo_schedoscope_example_osm_stage.node_tags": ["schedoscope.example.osm.stage/NodeTags/"],
      "demo_schedoscope_example_osm_processed.nodes_with_geohash": ["schedoscope.example.osm.processed/NodesWithGeohash/"]
    }
  }, {
    "viewTableName": "demo_schedoscope_example_osm_processed.nodes",
    "status": "materialized",
    "isTable": false,
    "viewPath": "schedoscope.example.osm.processed/Nodes/2015/04/201504",
    "dependencies": {
      "demo_schedoscope_example_osm_stage.node_tags": ["schedoscope.example.osm.stage/NodeTags/"],
      "demo_schedoscope_example_osm_processed.nodes_with_geohash": ["schedoscope.example.osm.processed/NodesWithGeohash/"]
    }
  }, {
    "viewTableName": "demo_schedoscope_example_osm_processed.nodes",
    "status": "materialized",
    "isTable": false,
    "viewPath": "schedoscope.example.osm.processed/Nodes/2015/09/201509",
    "dependencies": {
      "demo_schedoscope_example_osm_stage.node_tags": ["schedoscope.example.osm.stage/NodeTags/"],
      "demo_schedoscope_example_osm_processed.nodes_with_geohash": ["schedoscope.example.osm.processed/NodesWithGeohash/"]
    }
  }, {
    "viewTableName": "demo_schedoscope_example_osm_processed.nodes",
    "status": "materialized",
    "isTable": false,
    "viewPath": "schedoscope.example.osm.processed/Nodes/2014/04/201404",
    "dependencies": {
      "demo_schedoscope_example_osm_stage.node_tags": ["schedoscope.example.osm.stage/NodeTags/"],
      "demo_schedoscope_example_osm_processed.nodes_with_geohash": ["schedoscope.example.osm.processed/NodesWithGeohash/"]
    }
  }, {
    "viewTableName": "demo_schedoscope_example_osm_datahub.trainstations",
    "status": "materialized",
    "isTable": false,
    "viewPath": "schedoscope.example.osm.datahub/Trainstations/",
    "dependencies": {
      "demo_schedoscope_example_osm_processed.nodes": ["schedoscope.example.osm.processed/Nodes/2016/03/201603", "schedoscope.example.osm.processed/Nodes/2016/02/201602", "schedoscope.example.osm.processed/Nodes/2016/01/201601", "schedoscope.example.osm.processed/Nodes/2015/12/201512", "schedoscope.example.osm.processed/Nodes/2015/11/201511", "schedoscope.example.osm.processed/Nodes/2015/10/201510", "schedoscope.example.osm.processed/Nodes/2015/09/201509", "schedoscope.example.osm.processed/Nodes/2015/08/201508", "schedoscope.example.osm.processed/Nodes/2015/07/201507", "schedoscope.example.osm.processed/Nodes/2015/06/201506", "schedoscope.example.osm.processed/Nodes/2015/05/201505", "schedoscope.example.osm.processed/Nodes/2015/04/201504", "schedoscope.example.osm.processed/Nodes/2015/03/201503", "schedoscope.example.osm.processed/Nodes/2015/02/201502", "schedoscope.example.osm.processed/Nodes/2015/01/201501", "schedoscope.example.osm.processed/Nodes/2014/12/201412", "schedoscope.example.osm.processed/Nodes/2014/11/201411", "schedoscope.example.osm.processed/Nodes/2014/10/201410", "schedoscope.example.osm.processed/Nodes/2014/09/201409", "schedoscope.example.osm.processed/Nodes/2014/08/201408", "schedoscope.example.osm.processed/Nodes/2014/07/201407", "schedoscope.example.osm.processed/Nodes/2014/06/201406", "schedoscope.example.osm.processed/Nodes/2014/05/201405", "schedoscope.example.osm.processed/Nodes/2014/04/201404", "schedoscope.example.osm.processed/Nodes/2014/03/201403", "schedoscope.example.osm.processed/Nodes/2014/02/201402", "schedoscope.example.osm.processed/Nodes/2014/01/201401", "schedoscope.example.osm.processed/Nodes/2013/12/201312"]
    }
  }, {
    "viewTableName": "demo_schedoscope_example_osm_processed.nodes",
    "status": "materialized",
    "isTable": false,
    "viewPath": "schedoscope.example.osm.processed/Nodes/2015/02/201502",
    "dependencies": {
      "demo_schedoscope_example_osm_stage.node_tags": ["schedoscope.example.osm.stage/NodeTags/"],
      "demo_schedoscope_example_osm_processed.nodes_with_geohash": ["schedoscope.example.osm.processed/NodesWithGeohash/"]
    }
  }, {
    "viewTableName": "demo_schedoscope_example_osm_processed.nodes",
    "status": "materialized",
    "isTable": false,
    "viewPath": "schedoscope.example.osm.processed/Nodes/2014/11/201411",
    "dependencies": {
      "demo_schedoscope_example_osm_stage.node_tags": ["schedoscope.example.osm.stage/NodeTags/"],
      "demo_schedoscope_example_osm_processed.nodes_with_geohash": ["schedoscope.example.osm.processed/NodesWithGeohash/"]
    }
  }, {
    "viewTableName": "demo_schedoscope_example_osm_processed.nodes",
    "status": "materialized",
    "isTable": false,
    "viewPath": "schedoscope.example.osm.processed/Nodes/2015/07/201507",
    "dependencies": {
      "demo_schedoscope_example_osm_stage.node_tags": ["schedoscope.example.osm.stage/NodeTags/"],
      "demo_schedoscope_example_osm_processed.nodes_with_geohash": ["schedoscope.example.osm.processed/NodesWithGeohash/"]
    }
  }, {
    "viewTableName": "demo_schedoscope_example_osm_datahub.restaurants",
    "status": "materialized",
    "isTable": false,
    "viewPath": "schedoscope.example.osm.datahub/Restaurants/",
    "dependencies": {
      "demo_schedoscope_example_osm_processed.nodes": ["schedoscope.example.osm.processed/Nodes/2016/03/201603", "schedoscope.example.osm.processed/Nodes/2016/02/201602", "schedoscope.example.osm.processed/Nodes/2016/01/201601", "schedoscope.example.osm.processed/Nodes/2015/12/201512", "schedoscope.example.osm.processed/Nodes/2015/11/201511", "schedoscope.example.osm.processed/Nodes/2015/10/201510", "schedoscope.example.osm.processed/Nodes/2015/09/201509", "schedoscope.example.osm.processed/Nodes/2015/08/201508", "schedoscope.example.osm.processed/Nodes/2015/07/201507", "schedoscope.example.osm.processed/Nodes/2015/06/201506", "schedoscope.example.osm.processed/Nodes/2015/05/201505", "schedoscope.example.osm.processed/Nodes/2015/04/201504", "schedoscope.example.osm.processed/Nodes/2015/03/201503", "schedoscope.example.osm.processed/Nodes/2015/02/201502", "schedoscope.example.osm.processed/Nodes/2015/01/201501", "schedoscope.example.osm.processed/Nodes/2014/12/201412", "schedoscope.example.osm.processed/Nodes/2014/11/201411", "schedoscope.example.osm.processed/Nodes/2014/10/201410", "schedoscope.example.osm.processed/Nodes/2014/09/201409", "schedoscope.example.osm.processed/Nodes/2014/08/201408", "schedoscope.example.osm.processed/Nodes/2014/07/201407", "schedoscope.example.osm.processed/Nodes/2014/06/201406", "schedoscope.example.osm.processed/Nodes/2014/05/201405", "schedoscope.example.osm.processed/Nodes/2014/04/201404", "schedoscope.example.osm.processed/Nodes/2014/03/201403", "schedoscope.example.osm.processed/Nodes/2014/02/201402", "schedoscope.example.osm.processed/Nodes/2014/01/201401", "schedoscope.example.osm.processed/Nodes/2013/12/201312"]
    }
  }, {
    "viewTableName": "demo_schedoscope_example_osm_processed.nodes",
    "status": "materialized",
    "isTable": false,
    "viewPath": "schedoscope.example.osm.processed/Nodes/2014/02/201402",
    "dependencies": {
      "demo_schedoscope_example_osm_stage.node_tags": ["schedoscope.example.osm.stage/NodeTags/"],
      "demo_schedoscope_example_osm_processed.nodes_with_geohash": ["schedoscope.example.osm.processed/NodesWithGeohash/"]
    }
  }, {
    "viewPath": "schedoscope.example.osm.stage/Nodes/",
    "viewTableName": "demo_schedoscope_example_osm_stage.nodes",
    "status": "materialized",
    "isTable": false
  }, {
    "viewTableName": "demo_schedoscope_example_osm_processed.nodes",
    "status": "materialized",
    "isTable": false,
    "viewPath": "schedoscope.example.osm.processed/Nodes/2014/09/201409",
    "dependencies": {
      "demo_schedoscope_example_osm_stage.node_tags": ["schedoscope.example.osm.stage/NodeTags/"],
      "demo_schedoscope_example_osm_processed.nodes_with_geohash": ["schedoscope.example.osm.processed/NodesWithGeohash/"]
    }
  }, {
    "viewTableName": "demo_schedoscope_example_osm_processed.nodes",
    "status": "materialized",
    "isTable": false,
    "viewPath": "schedoscope.example.osm.processed/Nodes/2015/12/201512",
    "dependencies": {
      "demo_schedoscope_example_osm_stage.node_tags": ["schedoscope.example.osm.stage/NodeTags/"],
      "demo_schedoscope_example_osm_processed.nodes_with_geohash": ["schedoscope.example.osm.processed/NodesWithGeohash/"]
    }
  }, {
    "viewTableName": "demo_schedoscope_example_osm_processed.nodes",
    "status": "materialized",
    "isTable": false,
    "viewPath": "schedoscope.example.osm.processed/Nodes/2016/03/201603",
    "dependencies": {
      "demo_schedoscope_example_osm_stage.node_tags": ["schedoscope.example.osm.stage/NodeTags/"],
      "demo_schedoscope_example_osm_processed.nodes_with_geohash": ["schedoscope.example.osm.processed/NodesWithGeohash/"]
    }
  }, {
    "viewTableName": "demo_schedoscope_example_osm_processed.nodes",
    "status": "materialized",
    "isTable": false,
    "viewPath": "schedoscope.example.osm.processed/Nodes/2014/07/201407",
    "dependencies": {
      "demo_schedoscope_example_osm_stage.node_tags": ["schedoscope.example.osm.stage/NodeTags/"],
      "demo_schedoscope_example_osm_processed.nodes_with_geohash": ["schedoscope.example.osm.processed/NodesWithGeohash/"]
    }
  }, {
    "viewTableName": "demo_schedoscope_example_osm_processed.nodes",
    "status": "materialized",
    "isTable": false,
    "viewPath": "schedoscope.example.osm.processed/Nodes/2015/05/201505",
    "dependencies": {
      "demo_schedoscope_example_osm_stage.node_tags": ["schedoscope.example.osm.stage/NodeTags/"],
      "demo_schedoscope_example_osm_processed.nodes_with_geohash": ["schedoscope.example.osm.processed/NodesWithGeohash/"]
    }
  }, {
    "viewTableName": "demo_schedoscope_example_osm_processed.nodes",
    "status": "materialized",
    "isTable": false,
    "viewPath": "schedoscope.example.osm.processed/Nodes/2015/10/201510",
    "dependencies": {
      "demo_schedoscope_example_osm_stage.node_tags": ["schedoscope.example.osm.stage/NodeTags/"],
      "demo_schedoscope_example_osm_processed.nodes_with_geohash": ["schedoscope.example.osm.processed/NodesWithGeohash/"]
    }
  }, {
    "viewTableName": "demo_schedoscope_example_osm_processed.nodes",
    "status": "materialized",
    "isTable": false,
    "viewPath": "schedoscope.example.osm.processed/Nodes/2016/01/201601",
    "dependencies": {
      "demo_schedoscope_example_osm_stage.node_tags": ["schedoscope.example.osm.stage/NodeTags/"],
      "demo_schedoscope_example_osm_processed.nodes_with_geohash": ["schedoscope.example.osm.processed/NodesWithGeohash/"]
    }
  }, {
    "viewTableName": "demo_schedoscope_example_osm_datamart.shop_profiles",
    "status": "materialized",
    "isTable": false,
    "viewPath": "schedoscope.example.osm.datamart/ShopProfiles/",
    "dependencies": {
      "demo_schedoscope_example_osm_datahub.restaurants": ["schedoscope.example.osm.datahub/Restaurants/"],
      "demo_schedoscope_example_osm_datahub.trainstations": ["schedoscope.example.osm.datahub/Trainstations/"],
      "demo_schedoscope_example_osm_datahub.shops": ["schedoscope.example.osm.datahub/Shops/"]
    }
  }, {
    "viewTableName": "demo_schedoscope_example_osm_processed.nodes",
    "status": "materialized",
    "isTable": false,
    "viewPath": "schedoscope.example.osm.processed/Nodes/2014/05/201405",
    "dependencies": {
      "demo_schedoscope_example_osm_stage.node_tags": ["schedoscope.example.osm.stage/NodeTags/"],
      "demo_schedoscope_example_osm_processed.nodes_with_geohash": ["schedoscope.example.osm.processed/NodesWithGeohash/"]
    }
  }, {
    "viewPath": "schedoscope.example.osm.stage/NodeTags/",
    "viewTableName": "demo_schedoscope_example_osm_stage.node_tags",
    "status": "materialized",
    "isTable": false
  }, {
    "viewTableName": "demo_schedoscope_example_osm_processed.nodes",
    "status": "materialized",
    "isTable": false,
    "viewPath": "schedoscope.example.osm.processed/Nodes/2014/12/201412",
    "dependencies": {
      "demo_schedoscope_example_osm_stage.node_tags": ["schedoscope.example.osm.stage/NodeTags/"],
      "demo_schedoscope_example_osm_processed.nodes_with_geohash": ["schedoscope.example.osm.processed/NodesWithGeohash/"]
    }
  }, {
    "viewTableName": "demo_schedoscope_example_osm_processed.nodes",
    "status": "materialized",
    "isTable": false,
    "viewPath": "schedoscope.example.osm.processed/Nodes/2015/03/201503",
    "dependencies": {
      "demo_schedoscope_example_osm_stage.node_tags": ["schedoscope.example.osm.stage/NodeTags/"],
      "demo_schedoscope_example_osm_processed.nodes_with_geohash": ["schedoscope.example.osm.processed/NodesWithGeohash/"]
    }
  }, {
    "viewTableName": "demo_schedoscope_example_osm_processed.nodes_with_geohash",
    "status": "materialized",
    "isTable": false,
    "viewPath": "schedoscope.example.osm.processed/NodesWithGeohash/",
    "dependencies": {
      "demo_schedoscope_example_osm_stage.nodes": ["schedoscope.example.osm.stage/Nodes/"]
    }
  }, {
    "viewTableName": "demo_schedoscope_example_osm_processed.nodes",
    "status": "materialized",
    "isTable": false,
    "viewPath": "schedoscope.example.osm.processed/Nodes/2015/08/201508",
    "dependencies": {
      "demo_schedoscope_example_osm_stage.node_tags": ["schedoscope.example.osm.stage/NodeTags/"],
      "demo_schedoscope_example_osm_processed.nodes_with_geohash": ["schedoscope.example.osm.processed/NodesWithGeohash/"]
    }
  }, {
    "viewTableName": "demo_schedoscope_example_osm_processed.nodes",
    "status": "materialized",
    "isTable": false,
    "viewPath": "schedoscope.example.osm.processed/Nodes/2013/12/201312",
    "dependencies": {
      "demo_schedoscope_example_osm_stage.node_tags": ["schedoscope.example.osm.stage/NodeTags/"],
      "demo_schedoscope_example_osm_processed.nodes_with_geohash": ["schedoscope.example.osm.processed/NodesWithGeohash/"]
    }
  }, {
    "viewTableName": "demo_schedoscope_example_osm_processed.nodes",
    "status": "materialized",
    "isTable": false,
    "viewPath": "schedoscope.example.osm.processed/Nodes/2014/03/201403",
    "dependencies": {
      "demo_schedoscope_example_osm_stage.node_tags": ["schedoscope.example.osm.stage/NodeTags/"],
      "demo_schedoscope_example_osm_processed.nodes_with_geohash": ["schedoscope.example.osm.processed/NodesWithGeohash/"]
    }
  }, {
    "viewTableName": "demo_schedoscope_example_osm_datahub.shops",
    "status": "materialized",
    "isTable": false,
    "viewPath": "schedoscope.example.osm.datahub/Shops/",
    "dependencies": {
      "demo_schedoscope_example_osm_processed.nodes": ["schedoscope.example.osm.processed/Nodes/2016/03/201603", "schedoscope.example.osm.processed/Nodes/2016/02/201602", "schedoscope.example.osm.processed/Nodes/2016/01/201601", "schedoscope.example.osm.processed/Nodes/2015/12/201512", "schedoscope.example.osm.processed/Nodes/2015/11/201511", "schedoscope.example.osm.processed/Nodes/2015/10/201510", "schedoscope.example.osm.processed/Nodes/2015/09/201509", "schedoscope.example.osm.processed/Nodes/2015/08/201508", "schedoscope.example.osm.processed/Nodes/2015/07/201507", "schedoscope.example.osm.processed/Nodes/2015/06/201506", "schedoscope.example.osm.processed/Nodes/2015/05/201505", "schedoscope.example.osm.processed/Nodes/2015/04/201504", "schedoscope.example.osm.processed/Nodes/2015/03/201503", "schedoscope.example.osm.processed/Nodes/2015/02/201502", "schedoscope.example.osm.processed/Nodes/2015/01/201501", "schedoscope.example.osm.processed/Nodes/2014/12/201412", "schedoscope.example.osm.processed/Nodes/2014/11/201411", "schedoscope.example.osm.processed/Nodes/2014/10/201410", "schedoscope.example.osm.processed/Nodes/2014/09/201409", "schedoscope.example.osm.processed/Nodes/2014/08/201408", "schedoscope.example.osm.processed/Nodes/2014/07/201407", "schedoscope.example.osm.processed/Nodes/2014/06/201406", "schedoscope.example.osm.processed/Nodes/2014/05/201405", "schedoscope.example.osm.processed/Nodes/2014/04/201404", "schedoscope.example.osm.processed/Nodes/2014/03/201403", "schedoscope.example.osm.processed/Nodes/2014/02/201402", "schedoscope.example.osm.processed/Nodes/2014/01/201401", "schedoscope.example.osm.processed/Nodes/2013/12/201312"]
    }
  }]
}