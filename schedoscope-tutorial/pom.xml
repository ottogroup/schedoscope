<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<artifactId>schedoscope-tutorial</artifactId>
	<name>Schedoscope Tutorial</name>
	<description>An example Schedoscope project using Open Street Map data</description>

	<parent>
		<artifactId>schedoscope-suite</artifactId>
		<groupId>schedoscope</groupId>
		<version>0.4.4-SNAPSHOT</version>
	</parent>

	<dependencies>
		<dependency>
			<groupId>schedoscope</groupId>
			<artifactId>schedoscope-core</artifactId>
			<version>0.4.4-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>schedoscope</groupId>
			<artifactId>schedoscope-tutorial-osm-data</artifactId>
			<version>0.1.1</version>
		</dependency>
		<dependency>
			<groupId>ch.hsr</groupId>
			<artifactId>geohash</artifactId>
			<version>1.0.13</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.38</version>
		</dependency>
		<dependency>
			<groupId>com.klout</groupId>
			<artifactId>brickhouse</artifactId>
			<version>0.7.1</version>
			<exclusions>
				<exclusion>
					<groupId>joda-time</groupId>
					<artifactId>joda-time</artifactId>
				</exclusion>
				<exclusion>
					<artifactId>hadoop-core</artifactId>
					<groupId>org.apache.hadoop</groupId>
				</exclusion>
				<exclusion>
					<artifactId>hive-common</artifactId>
					<groupId>org.apache.hive</groupId>
				</exclusion>
				<exclusion>
					<artifactId>hive-exec</artifactId>
					<groupId>org.apache.hive</groupId>
				</exclusion>
				<exclusion>
					<artifactId>hbase</artifactId>
					<groupId>org.apache.hbase</groupId>
				</exclusion>
				<exclusion>
					<artifactId>guava</artifactId>
					<groupId>com.google.guava</groupId>
				</exclusion>
				<exclusion>
					<artifactId>stream</artifactId>
					<groupId>com.clearspring.analytics</groupId>
				</exclusion>
				<exclusion>
					<artifactId>jackson-core-asl</artifactId>
					<groupId>org.codehaus.jackson</groupId>
				</exclusion>
				<exclusion>
					<artifactId>jackson-jaxrs</artifactId>
					<groupId>org.codehaus.jackson</groupId>
				</exclusion>
				<exclusion>
					<artifactId>jackson-xc</artifactId>
					<groupId>org.codehaus.jackson</groupId>
				</exclusion>
				<exclusion>
					<artifactId>jackson-mapper-asl</artifactId>
					<groupId>org.codehaus.jackson</groupId>
				</exclusion>
				<exclusion>
					<groupId> org.cloudera.logredactor</groupId>
					<artifactId>logredactor</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.scalatest</groupId>
			<artifactId>scalatest_2.11</artifactId>
			<version>2.2.5</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>hadoop-launcher</groupId>
			<artifactId>hadoop-launcher</artifactId>
			<version>0.1.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>minioozie</groupId>
			<artifactId>minioozie</artifactId>
			<version>0.1.11</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<artifactId>jersey-server</artifactId>
					<groupId>com.sun.jersey</groupId>
				</exclusion>
				<exclusion>
					<groupId>org.cloudera.logredactor</groupId>
					<artifactId>logredactor</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>

	<build>
		<sourceDirectory>src/main/scala</sourceDirectory>
		<testSourceDirectory>src/test/scala</testSourceDirectory>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.7</version>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.4</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- see http://davidb.github.com/scala-maven-plugin -->
				<groupId>net.alchim31.maven</groupId>
				<artifactId>scala-maven-plugin</artifactId>
				<version>3.2.2</version>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
							<goal>testCompile</goal>
							<goal>doc-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.19</version>
				<configuration>
					<skipTests>true</skipTests>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.scalatest</groupId>
				<artifactId>scalatest-maven-plugin</artifactId>
				<version>1.0</version>
				<configuration>
					<reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
					<junitxml>.</junitxml>
					<filereports>WDF TestSuite.txt</filereports>
					<argLine>-Xmx1024m -XX:MaxPermSize=512M</argLine>
					<environmentVariables>
						<HADOOP_HOME>${project.build.directory}/hadoop</HADOOP_HOME>
					</environmentVariables>
				</configuration>
				<executions>
					<execution>
						<id>test</id>
						<goals>
							<goal>test</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<includeScope>compile</includeScope>
							<includeArtifactIds>brickhouse</includeArtifactIds>
							<outputDirectory>${project.build.directory}/hive-libraries</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.github.wvengen</groupId>
				<artifactId>proguard-maven-plugin</artifactId>
				<version>2.0.8</version>
				<executions>
					<execution>
						<id>package-mapreduce-resources</id>
						<phase>package</phase>
						<goals>
							<goal>proguard</goal>
						</goals>
						<configuration>
							<obfuscate>false</obfuscate>
							<injar>classes</injar>
							<libs>
								<lib>${java.home}/lib/rt.jar</lib>
							</libs>
							<options>
								<option>-keep public class schedoscope.example.osm.mapreduce.**
									{*; }</option>
								<option>-dontnote **</option>
								<option>-dontshrink</option>
								<option>-dontwarn</option>
								<option>-dontoptimize</option>
								<option>-dontskipnonpubliclibraryclassmembers</option>
							</options>
							<includeDependency>false</includeDependency>
							<outjar>${project.build.finalName}-mapreduce.jar</outjar>
							<inFilter>!**Test*,schedoscope/example/osm/mapreduce/**.class</inFilter>
							<assembly>
								<inclusions>
									<inclusion>
										<groupId>ch.hsr</groupId>
										<artifactId>geohash</artifactId>
									</inclusion>
									<inclusion>
										<groupId>org.scala-lang</groupId>
										<artifactId>scala-library</artifactId>
									</inclusion>
								</inclusions>
							</assembly>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.4.0</version>
				<executions>
					<execution>
						<goals>
							<goal>java</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<mainClass>org.schedoscope.scheduler.rest.server.SchedoscopeRestService</mainClass>
					<arguments>
						<argument>--shell</argument>
					</arguments>
					<systemProperties>
						<systemProperty>
							<key>config.file</key>
							<value>src/main/resources/schedoscope.conf</value>
						</systemProperty>
					</systemProperties>
					<additionalClasspathElements>
						<additionalClasspathElement>/etc/hadoop/conf</additionalClasspathElement>
						<additionalClasspathElement>/etc/hive/conf</additionalClasspathElement>
						<additionalClasspathElement>target/${project.build.finalName}-mapreduce.jar</additionalClasspathElement>
					</additionalClasspathElements>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
