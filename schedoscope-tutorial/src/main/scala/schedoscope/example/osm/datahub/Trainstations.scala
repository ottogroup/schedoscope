/**
 * Copyright 2015 Otto (GmbH & Co KG)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package schedoscope.example.osm.datahub

import org.schedoscope.dsl.Parameter.p
import org.schedoscope.dsl.View
import org.schedoscope.dsl.storageformats.Parquet
import org.schedoscope.dsl.transformations.PigTransformation
import org.schedoscope.dsl.transformations.PigTransformation.scriptFromResource
import org.schedoscope.dsl.views.DateParameterizationUtils.allMonths
import org.schedoscope.dsl.views.{ Id, JobMetadata }
import schedoscope.example.osm.Globals._
import schedoscope.example.osm.processed.Nodes

case class Trainstations() extends View
    with Id
    with JobMetadata {

  val stationName = fieldOf[String]("The name of the trainstation")
  val area = fieldOf[String]("A geoencoded area string")

  val nodes = dependsOn(() =>
    for ((year, month) <- allMonths())
      yield Nodes(p(year), p(month)))

  transformVia(() =>
    PigTransformation(
      scriptFromResource("pig_scripts/datahub/insert_trainstations.pig"),
      List(this.fullPath)).configureWith(
        Map(
          "input_table" -> dependencies(0).tableName,
          "output_folders" -> this.fullPath,
          "storage_format" -> "parquet.pig.ParquetStorer()") ++ defaultPigProperties(this)))

  comment("View of trainstations generated by Pig transformation")

  storedAs(Parquet())
}
